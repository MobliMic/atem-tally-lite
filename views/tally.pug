doctype html
html
  head
    title= title
    meta(name='viewport',content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0')
  body
    nav.navbar-expand.fixed-top.navbar-dark.bg-dark.justify-content-between
        .camSelectArea
            button.btn.btn-secondary#btnMobileSettings Settings
            button.btn.btn-link#btnWakeLock Keep Screen On


    section.viewport-frame
        .view#viewTally
            #viewTallyRenderer

    section.mobileSettings(style="display:none;")
        .mobileSettingsViewBg
        .mobileSettingsView
            .mobileSettingsViewContainer
                .row
                    .form-group.col-sm
                        label.navbar-text(for="cameraSelection") Camera
                        select.form-control#cameraSelection
                .row
                    .form-group.col-sm
                        label.navbar-text(for="btnProgramColor") Program Color
                        input.form-control#btnProgramColor(type="color",value="#FF0000")
                    .form-group.col-sm
                        label.navbar-text(for="btnPreviewColor") Preview Color
                        input.form-control#btnPreviewColor(type="color",value="#00FF00")
                .row
                    .col-sm
                        button.btn.btn-primary#btnMobileCloseSettings(type="button",aria-label="close")
                            span(aria-hidden="true") Save
            
    link(rel="stylesheet", href="/css/bootstrap.min.css")
    link(rel="stylesheet", href="/css/style.min.css")


    script(src="/js/socket.io.js")
    script(src="/jquery/jquery.min.js")
    script(src="/nosleep/NoSleep.min.js")
    script(src="/jscookie/js.cookie.js")
    script.
        var lastUpdate = {};
        var camSelection = window.location.hash.split('#')[1] || "ALL";
        var programColor = "#FF0000";
        var previewColor = "#00FF00";
        var noSleep = new NoSleep();

        function updateTallyColor() {
            console.log("updating color")
            $('.tally').css('background', '#333333'); // Reset all to black first
            $(".tally[data-tally-state='preview']").css('background', getPreviewColor());
            $(".tally[data-tally-state='program']").css('background', getProgramColor());
            $('#btnProgramColor').val(getProgramColor());
            $('#btnPreviewColor').val(getPreviewColor());
        }

        function bindCameraButtons() {
            $('.tally-multi').click(function(cam) {
                var sid = $(this).data('sid');
                $('#cameraSelection').val(sid);
                $('#cameraSelection').change();
            });
            $('.tally-single').click(function(cam) {
                $('#cameraSelection').val("ALL");
                $('#cameraSelection').change();
            });
        }


        function updateTally() {
            console.log("Updating UI");
            $("#viewTallyRenderer").html('');
            $("#viewTallyRenderer").removeClass('viewSingleTally viewMultiTally');

            if (camSelection === "ALL") {
                if (lastUpdate && lastUpdate.availableCameras && lastUpdate.availableCameras.length > 0) {
                    $("#viewTallyRenderer").addClass('viewMultiTally');
                    $.each(lastUpdate.availableCameras, function(key, value) {
                        $("#viewTallyRenderer").append($('<div/>',{
                            class: "tally tally-multi",
                            'data-sid': value.sourceID,
                            'data-cid': value.sourceID.split('_')[1],
                            'data-tally-state': (lastUpdate.programSourceIds.includes(parseInt(value.sourceID.split('_')[1]))) ? 'program' : ((lastUpdate.previewSourceIds.includes(parseInt(value.sourceID.split('_')[1]))) ? 'preview': 'inactive'),
                            'data-abbreviation': value.abbreviation,
                            'data-name': value.name
                        }))
                    });
                    $('.tally-multi').each(function(i, obj) {
                        $(obj).append('<span class="tallyCameraId">' + $(obj).attr('data-cid') + '</span>');
                        $(obj).append('<span class="tallyCameraLabel">' + $(obj).attr('data-abbreviation') + '</span>');
                    });
                }
            } else {
                $("#viewTallyRenderer").addClass('viewSingleTally');
                $.each(lastUpdate.availableCameras, function(key, value) {
                    if (camSelection == value.sourceID) {
                        $("#viewTallyRenderer").append($('<div/>',{
                            class: "tally tally-single",
                            'data-sid': value.sourceID,
                            'data-cid': value.sourceID.split('_')[1],
                            'data-tally-state': (lastUpdate.programSourceIds.includes(parseInt(value.sourceID.split('_')[1]))) ? 'program' : ((lastUpdate.previewSourceIds.includes(parseInt(value.sourceID.split('_')[1]))) ? 'preview': 'inactive'),
                            'data-abbreviation': value.abbreviation,
                            'data-name': value.name
                        }))
                    }
                });
                $('.tally-single').each(function(i, obj) {
                    $(obj).append('<span class="tallyCameraId">' + $(obj).attr('data-cid') + '</span>');
                    $(obj).append('<span class="tallyCameraLabel">' + $(obj).attr('data-abbreviation') + '</span>');
                });
            }

            updateTallyColor();
            bindCameraButtons();
        }
        function setCamera() {
            camSelection = $('#cameraSelection').val();
            window.location.hash = camSelection
            Cookies.set('cameraSelection', camSelection);
            updateTally();
        }
        function getCamera() {
            var camSelection = Cookies.set('cameraSelection');
            if (!camSelection) {
                camSelection = "ALL";
                Cookies.set('cameraSelection', camSelection);
            }
            return camSelection;
        }
        function setProgramColor(color) {
            Cookies.set('programColor', color);
            programColor = color;
            updateTallyColor();
        }
        function setPreviewColor(color) {
            Cookies.set('previewColor', color);
            previewColor = color;
            updateTallyColor();
        }
        function getProgramColor() {
            var color = (Cookies.get('programColor')) ? Cookies.get('programColor') : programColor;
            return color;
        }
        function getPreviewColor() {
            var color = (Cookies.get('previewColor')) ? Cookies.get('previewColor') : previewColor;
            return color;
        }
        $('#cameraSelection').change(() => { setCamera(); });
        $('#btnProgramColor').change(() => { setProgramColor( $('#btnProgramColor').val() ); });
        $('#btnPreviewColor').change(() => { setPreviewColor( $('#btnPreviewColor').val() ); });
        $('#btnWakeLock').click(() => {noSleep.enable(); $('#btnWakeLock').hide()});
        $('#btnMobileSettings').click(() => {
            $('.mobileSettings').css('display','block');
        });
        $('.mobileSettingsViewBg').click(() => {
            $('.mobileSettings').css('display','none');
            setProgramColor( $('#btnProgramColor').val() );
            setPreviewColor( $('#btnPreviewColor').val() );
        });
        $('#btnMobileCloseSettings').click(() => {
            $('.mobileSettings').css('display','none');
            setProgramColor( $('#btnProgramColor').val() );
            setPreviewColor( $('#btnPreviewColor').val() );
        });
        $(function () {
            var socket = io();
            socket.on('update_tally', function(msg) {
                console.log(msg);
                lastUpdate = msg;
                $('#cameraSelection').html('');
                $('#cameraSelection').append($('<option/>', {
                    value: "ALL",
                    text: "All Cameras",
                    selected: (camSelection != "ALL") ? false : true
                }));
                $.each(msg.availableCameras, function(key, value) {
                    console.log(value);
                    $('#cameraSelection').append($('<option/>', {
                        value: value.sourceID,
                        text: value.name + " (" + value.abbreviation + " - " + value.interface + ")",
                        selected: (camSelection == value.sourceID) ? true : false
                    }));
                })
                updateTally();
                bindCameraButtons();
            })
        });